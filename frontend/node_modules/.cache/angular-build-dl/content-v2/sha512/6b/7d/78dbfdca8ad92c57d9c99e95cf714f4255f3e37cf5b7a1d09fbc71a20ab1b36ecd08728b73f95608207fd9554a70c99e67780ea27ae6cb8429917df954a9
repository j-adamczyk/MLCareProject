{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-patient/add-patient.component.ts","./src/app/components/add-patient/add-patient.component.html","./src/app/components/doctor-navigation/doctor-navigation.component.ts","./src/app/components/doctor-navigation/doctor-navigation.component.html","./src/app/components/patient-details/patient-details.component.ts","./src/app/components/patient-details/patient-details.component.html","./src/app/components/patients/patients.component.ts","./src/app/components/patients/patients.component.html","./src/app/components/pick-disease-dialog/pick-disease-dialog.component.ts","./src/app/components/pick-disease-dialog/pick-disease-dialog.component.html","./src/app/components/pick-disease-prediction/pick-disease-prediction.component.ts","./src/app/components/pick-disease-prediction/pick-disease-prediction.component.html","./src/app/components/visit-details/visit-details.component.ts","./src/app/components/visit-details/visit-details.component.html","./src/app/services/in-memory-data.service.ts","./src/app/services/patient.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {PatientsComponent} from './components/patients/patients.component';\nimport {PatientDetailsComponent} from './components/patient-details/patient-details.component';\nimport {AddPatientComponent} from './components/add-patient/add-patient.component';\nimport {VisitDetailsComponent} from './components/visit-details/visit-details.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'tutorials', pathMatch: 'full' },\n  { path: 'patients', component: PatientsComponent },\n  { path: 'patient/:id', component: PatientDetailsComponent },\n  { path: 'add-patient', component: AddPatientComponent },\n  { path: 'patient/:id/:visitId', component: VisitDetailsComponent },\n];\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes),\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {map, shareReplay} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<link href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@700&display=swap\" rel=\"stylesheet\">\n<router-outlet></router-outlet>\n<mat-sidenav-container class=\"sidenav-container\">\n\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n               [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n               [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n               [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar color=\"accent\">Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/\">Home Page</a>\n      <a mat-list-item routerLink=\"patients\">Patient Data</a>\n      <a mat-list-item routerLink=\"add-patient\">Add patient</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <div class=\"container mt-3\">\n  </div>\n  <router-outlet></router-outlet>\n\n</mat-sidenav-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSliderModule} from '@angular/material/slider';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DoctorNavigationComponent } from './components/doctor-navigation/doctor-navigation.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport {MatInputModule} from '@angular/material/input';\nimport { PatientDetailsComponent } from './components/patient-details/patient-details.component';\nimport { PatientsComponent } from './components/patients/patients.component';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AddPatientComponent } from './components/add-patient/add-patient.component';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './services/in-memory-data.service';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSnackBarModule, MatSnackBar} from '@angular/material/snack-bar';\nimport { VisitDetailsComponent } from './components/visit-details/visit-details.component';\nimport { PickDiseasePredictionComponent } from './components/pick-disease-prediction/pick-disease-prediction.component';\nimport { PickDiseaseDialogComponent } from './components/pick-disease-dialog/pick-disease-dialog.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DoctorNavigationComponent,\n    PatientDetailsComponent,\n    PatientsComponent,\n    AddPatientComponent,\n    VisitDetailsComponent,\n    PickDiseasePredictionComponent,\n    PickDiseaseDialogComponent,\n  ],\n    imports: [\n        BrowserModule,\n        MatToolbarModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatSliderModule,\n        BrowserAnimationsModule,\n        LayoutModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatListModule,\n        MatInputModule,\n        FormsModule,\n        HttpClientModule,\n        AppRoutingModule,\n        HttpClientModule,\n        HttpClientInMemoryWebApiModule.forRoot(\n            InMemoryDataService, {dataEncapsulation: false}\n        ),\n        MatTableModule,\n        MatSnackBarModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatSelectModule\n    ],\n  entryComponents: [PickDiseaseDialogComponent],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {PatientService} from '../../services/patient.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Patient} from '../../interfaces/patient';\n\n@Component({\n  selector: 'app-add-patient',\n  templateUrl: './add-patient.component.html',\n  styleUrls: ['./add-patient.component.css']\n})\nexport class AddPatientComponent implements OnInit {\n  patient: Patient;\n  added = false;\n  constructor(private patientService: PatientService, private snaackBar: MatSnackBar) {\n    this.clearPatientData();\n  }\n\n  ngOnInit(): void {\n  }\n\n  savePatient(){\n    this.added = false;\n    const patientData = {\n      patientId: this.patient.patientId,\n      firstName: this.patient.firstName,\n      middleName: this.patient.middleName,\n      lastName: this.patient.lastName,\n    };\n    this.patientService.createPatient(this.patient).subscribe(\n      response => {\n        console.log(response);\n        this.added = true;\n        this.clearPatientData();\n        this.openSnackBar('Patient added successfully', 'Close');\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  openSnackBar(message: string, action: string) {\n    this.snaackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n  clearPatientData(){\n    this.added = false;\n    this.patient = {\n      id: -1,\n      patientId: '',\n      gender: -1,\n      firstName: '',\n      middleName: '',\n      lastName: '',\n      address: '',\n      birthDate: '',\n      birthPlace: '',\n      phoneNumber: '',\n      email: '',\n      visits: [],\n      predictions: []\n    };\n  }\n\n}\n","<div class=\"example-container\">\n  <div>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>First name</mat-label>\n      <label>\n        <input matInput\n               placeholder=\"First Name\"\n               type=\"text\"\n               required\n               [(ngModel)]=\"patient.firstName\">\n      </label>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Middle name</mat-label>\n      <input matInput\n             placeholder=\"Middle Name\"\n             type=\"text\"\n             [(ngModel)]=\"patient.middleName\">\n    </mat-form-field>\n    <br>\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Last name</mat-label>\n      <input matInput\n             placeholder=\"Last Name\"\n             type=\"text\"\n             required\n             [(ngModel)]=\"patient.lastName\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Gender</mat-label>\n<!--todo-->\n      <mat-select disableRipple>\n        <mat-option value=\"0\" [(ngModel)]=\"patient.gender\">Male</mat-option>\n        <mat-option value=\"1\" [(ngModel)]=\"patient.gender\">Female</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <br>\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Address</mat-label>\n      <input matInput\n             placeholder=\"Address\"\n             type=\"text\"\n             required\n             [(ngModel)]=\"patient.address\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Patient Id</mat-label>\n      <input matInput\n             placeholder=\"Patient Id\"\n             type=\"text\"\n             required\n             [(ngModel)]=\"patient.patientId\">\n    </mat-form-field>\n    <br>\n\n    <button mat-raised-button\n            (click)=\"savePatient()\"\n            class=\"btn btn-success\"\n            [disabled]=\"!patient.firstName || !patient.lastName || !patient.patientId\"\n            color=\"primary\">Submit</button>\n  </div>\n\n\n\n</div>\n\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-doctor-navigation',\n  templateUrl: './doctor-navigation.component.html',\n  styleUrls: ['./doctor-navigation.component.css']\n})\nexport class DoctorNavigationComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"patients\">Patient Data</a>\n      <a mat-list-item routerLink=\"add-patient\">Add patient</a>\n      <a mat-list-item href=\"#\">Predictions</a>\n      <a mat-list-item href=\"#\">Predict disease</a>\n      <a mat-list-item href=\"#\">Notes</a>\n      <a mat-list-item href=\"#\">Change Patient</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>MLCare</span>\n      <span class=\"example-spacer\"></span>\n      <form class=\"example-form\">\n        <table class=\"example-full-width\" cellspacing=\"0\"><tr>\n          <td><mat-form-field class=\"example-full-width\" floatLabel=\"never\">\n            <mat-label >Login</mat-label>\n            <input matInput>\n          </mat-form-field></td>\n          <td><mat-form-field class=\"example-full-width\" floatLabel=\"never\">\n            <input type=\"password\" matInput placeholder=\"Password\">\n          </mat-form-field></td>\n        </tr></table>\n      </form>\n\n      <button type=\"button\" mat-raised-button class=\"login-button\">\n        Login\n      </button>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {PatientService} from '../../services/patient.service';\nimport {Patient} from '../../interfaces/patient';\nimport {ActivatedRoute} from '@angular/router';\nimport { Location } from '@angular/common';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { Visit } from 'src/app/interfaces/visit';\n\n@Component({\n  selector: 'app-patient-details',\n  templateUrl: './patient-details.component.html',\n  styleUrls: ['./patient-details.component.css']\n})\nexport class PatientDetailsComponent implements OnInit {\n  patientVisit: Visit[];\n  dataSource: MatTableDataSource<Visit>;\n  @Input() patient: Patient;\n  displayedColumns: string[] = ['id', 'visitDate', 'doctorId', 'doctorName'];\n  constructor(private patientService: PatientService,\n              private route: ActivatedRoute,\n              private location: Location) {\n    this.dataSource = new MatTableDataSource(this.patientVisit);\n  }\n\n  ngOnInit(): void {\n    this.getPatient();\n  }\n\n  getPatient(){\n    if (this.patientService.wentBack) {\n      this.patient = this.patientService.patient;\n      this.dataSource.data = this.patient.visits;\n    }\n    else {\n      const id = +this.route.snapshot.paramMap.get('id');\n      this.patientService.getPatient(id).subscribe(patient => {\n        this.patient = patient;\n        this.dataSource.data = patient.visits;\n        this.patientService.patient = patient;\n      });\n    }\n  }\n\n  goBack(): void {\n    this.patientService.wentBack = false;\n    this.location.back();\n  }\n\n  filterName(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<h1>{{patient.firstName}}</h1>\n<button mat-raised-button color=\"accent\" (click)=\"goBack()\">Go back</button>\n<br>\n\n<!-- Visits table -->\n<mat-form-field class=\"SearchBar\">\n  <mat-label>Search</mat-label>\n  <input matInput (keyup)=\"filterName($event)\" placeholder=\"Visit\">\n</mat-form-field>\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <!--  ID column  -->\n  <ng-container matColumnDef=\"id\">\n    <mat-header-cell *matHeaderCellDef> Id </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n  </ng-container>\n  <!--  Visit date column  -->\n  <ng-container matColumnDef=\"visitDate\">\n    <mat-header-cell *matHeaderCellDef> Visit Date </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.date}} </mat-cell>\n  </ng-container>\n\n  <!--  Doctor Id column  -->\n  <ng-container matColumnDef=\"doctorId\">\n    <mat-header-cell *matHeaderCellDef> Doctor Id </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.doctor.doctorId}} </mat-cell>\n  </ng-container>\n\n  <!--  Doctor Name column  -->\n  <ng-container matColumnDef=\"doctorName\">\n    <mat-header-cell *matHeaderCellDef> Doctor Name </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.doctor.doctorName}} </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\" routerLink=\"/patient/{{patient.id}}/{{row.id}}\" class=\"row-link\"></mat-row>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport {Patient} from '../../interfaces/patient';\nimport {PatientService} from '../../services/patient.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-patients',\n  templateUrl: './patients.component.html',\n  styleUrls: ['./patients.component.css']\n})\nexport class PatientsComponent implements OnInit {\n  patients: Patient[];\n  displayedColumns: string[] = ['id', 'firstName', 'lastName', 'birth', 'address'];\n  dataSource: MatTableDataSource<Patient>;\n  constructor(private patientService: PatientService, private router: Router) {\n    this.dataSource = new MatTableDataSource(this.patients);\n  }\n\n  ngOnInit(): void {\n    this.getPatients();\n  }\n\n  getPatients(){\n    this.patientService.wentBack = false;\n    this.patientService.getAllPatients().\n      subscribe(patients => {this.patients = patients;\n                             this.dataSource.data = patients; }\n      );\n  }\n\n  filterName(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<mat-form-field class=\"SearchBar\">\n  <mat-label>Search</mat-label>\n  <input matInput (keyup)=\"filterName($event)\" placeholder=\"Patient\">\n</mat-form-field>\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <!--  ID column  -->\n  <ng-container matColumnDef=\"id\">\n    <mat-header-cell *matHeaderCellDef> Id </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n  </ng-container>\n<!--  First Name column  -->\n  <ng-container matColumnDef=\"firstName\">\n    <mat-header-cell *matHeaderCellDef> First Name </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.firstName}} </mat-cell>\n  </ng-container>\n  <!--  Last Name column  -->\n  <ng-container matColumnDef=\"lastName\">\n    <mat-header-cell *matHeaderCellDef> Last Name </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.lastName}} </mat-cell>\n  </ng-container>\n  <!--  Birth column  -->\n  <ng-container matColumnDef=\"birth\">\n    <mat-header-cell *matHeaderCellDef> Birth </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.birthDate}}, {{element.birthPlace}} </mat-cell>\n  </ng-container>\n  <!--  Address column  -->\n  <ng-container matColumnDef=\"address\">\n    <mat-header-cell *matHeaderCellDef> Address </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.address}} </mat-cell>\n  </ng-container>\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\" routerLink=\"/patient/{{row.id}}\" class=\"row-link\"></mat-row>\n</table>\n\n\n\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {Patient} from '../../interfaces/patient';\nimport {Disease} from '../../interfaces/disease';\n\n@Component({\n  selector: 'app-pick-disease-dialog',\n  templateUrl: './pick-disease-dialog.component.html',\n  styleUrls: ['./pick-disease-dialog.component.css']\n})\nexport class PickDiseaseDialogComponent implements OnInit {\n  diseases: Disease[];\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data) {\n    this.diseases = data.dis;\n  }\n\n  ngOnInit(): void {\n  }\n\n  predictDiseases(){\n\n  }\n\n}\n","<h1 mat-dialog-title>Choose diseases to check</h1>\n<div mat-dialog-content>\n  Possible diseases to check:\n  <ul *ngFor=\"let disease of diseases\">\n      <mat-checkbox class=\"disease-list\"> {{disease.name}}</mat-checkbox>\n    <ul *ngFor=\"let feature of disease.neededFeatures\">{{feature.name}}</ul>\n  </ul>\n  <button mat-flat-button (click)=\"predictDiseases()\" disabled=\"\">Predict</button>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pick-disease-prediction',\n  templateUrl: './pick-disease-prediction.component.html',\n  styleUrls: ['./pick-disease-prediction.component.css']\n})\nexport class PickDiseasePredictionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pick-disease-prediction works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {PatientService} from '../../services/patient.service';\nimport {Visit} from '../../interfaces/visit';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Exam} from '../../interfaces/exam';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {MatDialog} from '@angular/material/dialog';\nimport {PickDiseaseDialogComponent} from '../pick-disease-dialog/pick-disease-dialog.component';\nimport {Disease} from '../../interfaces/disease';\n\n@Component({\n  selector: 'app-visit-details',\n  templateUrl: './visit-details.component.html',\n  styleUrls: ['./visit-details.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class VisitDetailsComponent implements OnInit {\n  visit: Visit;\n  dataSource: MatTableDataSource<Exam>;\n  columnsToDisplay = ['Id', 'Name', 'Date'];\n  featuresColumnsToDisplay = ['featureName', 'featureValue'];\n  expandedElement: Exam | null;\n  diseases: Disease[];\n\n\n  constructor(private patientService: PatientService,\n              private route: ActivatedRoute,\n              private location: Location,\n              public dialog: MatDialog) {\n    this.dataSource = new MatTableDataSource<Exam>();\n    this.loadVisit();\n    this.loadDiseases();\n  }\n\n  ngOnInit(): void {\n  }\n\n  loadVisit(){\n    const visitId = +this.route.snapshot.paramMap.get('visitId');\n    if (this.patientService.patient != null){\n      this.visit = this.patientService.patient.visits.filter(visit => visit.id === visitId)[0];\n      this.dataSource.data = this.visit.exams;\n    } else {\n      const patientId = +this.route.snapshot.paramMap.get('id');\n      this.patientService.getPatient(patientId).subscribe(patient => { this.patientService.patient = patient;\n                                                                       this.visit = patient.visits.filter(visit => visit.id === visitId)[0];\n                                                                       this.dataSource.data = this.visit.exams;\n      });\n\n    }\n  }\n\n  loadDiseases(){\n    this.patientService.getAllDiseases().subscribe(diss => this.diseases = diss);\n  }\n\n  openPickDiseases(){\n    const dis = this.diseases;\n    console.log(dis);\n    this.dialog.open(PickDiseaseDialogComponent, {\n      data: {dis}\n    });\n  }\n\n  openPickExams(){\n\n  }\n\n  goBack(): void {\n    this.patientService.wentBack = true;\n    this.location.back();\n  }\n\n}\n","<p>{{visit.id}}</p>\n<button mat-raised-button (click)=\"goBack()\">Go back</button>\n<br>\n<button mat-raised-button color=\"accent\" [disabled]=\"this.diseases == null\" (click)=\"openPickDiseases()\">Predict disease</button>\n<button mat-raised-button color=\"accent\" (click)=\"openPickExams()\">Predict based on the exams</button>\n\n<table mat-table\n       [dataSource]=\"dataSource\" multiTemplateDataRows\n       class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element[column.toLowerCase()]}} </td>\n  </ng-container>\n\n<!--  &lt;!&ndash; Expanded Content Column - The detail row is made up of this one column that spans across all columns &ndash;&gt;-->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n      <div class=\"example-element-detail\"\n           [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n        <table mat-table [dataSource]=\"element.features\" class=\"mat-elevation-z0 inner-feature-table\">\n\n          <ng-container matColumnDef=\"featureName\">\n            <th mat-header-cell *matHeaderCellDef> Feature Name </th>\n            <td mat-cell *matCellDef=\"let elem\"> {{elem.name}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"featureValue\">\n            <th mat-header-cell *matHeaderCellDef> Value </th>\n            <td mat-cell *matCellDef=\"let elem\"> {{elem.value}} {{elem.unit}}</td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"featuresColumnsToDisplay\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: featuresColumnsToDisplay;\"></tr>\n        </table>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\n      class=\"example-element-row\"\n      [class.example-expanded-row]=\"expandedElement === element\"\n      (click)=\"expandedElement = expandedElement === element ? null : element\">\n  </tr>\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n</table>\n","import { Injectable } from '@angular/core';\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Patient } from '../interfaces/patient';\nimport {Feature} from '../interfaces/feature';\nimport {Exam} from '../interfaces/exam';\nimport {Disease} from '../interfaces/disease';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    // patients part\n    const doctors = [{doctorId: 19, doctorName: 'Jan Brzechwa'},\n      {doctorId: 20, doctorName: 'Juliusz Słowacki'},\n      {doctorId: 22, doctorName: 'Severus Snape'}];\n    const localFeatures: Feature[] = [{name: 'parametr1', value: 10, unit: 'g'},\n      {name: 'parametr2', value: 20, unit: 'g'},\n      {name: 'parametr3', value: 30, unit: 'g'}];\n    const localExams: Exam[] = [\n      {id: 1, name: 'krwi', date: '10.10.2019',\n        features: localFeatures.slice(0, 2)},\n      {id: 2, name: 'USG', date: '12.10.2019',\n        features: localFeatures.slice(1, 3)},\n      {id: 3, name: 'EKG', date: '13.10.2019',\n        features: localFeatures.slice(0, 3)}\n    ];\n    const localPrediction = [{date: '11.10.2019', disease: 'choroba',\n      description: 'upsik'}];\n    const localVisits = [{id: 1, date: '09.10.2019',\n      doctor: doctors[0], exams: localExams.slice(0, 2),\n      predictions: localPrediction},\n      {id: 2, date: '10.10.2019',\n        doctor: doctors[1], exams: localExams.slice(1, 3),\n        predictions: localPrediction},\n      {id: 4, date: '09.10.2019',\n        doctor: doctors[2], exams: localExams,\n        predictions: localPrediction}, ];\n    const patients = [\n      { id: 1, patientId: '989898989898', gender: '0', address: 'Miasto w mieście', birthDate: '01.02.1960',\n        birthPlace: 'Bytom', phoneNumber: '123456789', email: 'mail@pe.el', firstName: 'Jan', middleName: '',\n        lastName: 'Kowalski', visits: localVisits },\n      { id: 2, patientId: '01', gender: '0', address: 'Hogwart', birthDate: '30.07.1990',\n        birthPlace: 'Dolina Godryka', phoneNumber: '123456789', email: 'magiczny@harry.hg', firstName: 'Harry', middleName: '',\n        lastName: 'Potter', visits: localVisits.slice(0, 2) },\n      { id: 3, patientId: '777', gender: '0', address: 'Anglia', birthDate: '21.10.1920',\n        birthPlace: 'Bytom', phoneNumber: '123456789', email: 'mail@pe.el', firstName: 'James', middleName: '',\n        lastName: 'Bond', visits: localVisits.slice(0, 1) },\n      { id: 4, patientId: '989898989898', gender: '0', address: 'Hogwart', birthDate: '01.02.1880',\n        birthPlace: 'Dolina Godryka', phoneNumber: '123456789', email: 'eeee@ze.co', firstName: 'Albus', middleName: 'Persiwal',\n        lastName: 'Dumbledore', visits: localVisits.slice(1, 3) },\n    ];\n\n    // predictions part\n    const predictions = [];\n\n    // diseases part\n    const diseases: Disease[] = [{id: 1, name: 'Hemophilia', neededFeatures: localFeatures.slice(0, 1)},\n      {id: 2, name: 'Cholera', neededFeatures: localFeatures.slice(1, 2)},\n      {id: 3, name: 'Anemia', neededFeatures: localFeatures.slice(0, 2)}];\n    return {patients, predictions, diseases};\n  }\n\n  // Overrides the genId method to ensure that a hero always has an id.\n  // If the patients array is empty,\n  // the method below returns the initial number (1).\n  // if the patients array is not empty, the method below returns the highest\n  // patient id + 1.\n  genId(patients: Patient[]): number {\n    return patients.length > 0 ? Math.max(...patients.map(patient => patient.id)) + 1 : 1;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Patient} from '../interfaces/patient';\nimport {Observable} from 'rxjs';\nimport {Disease} from '../interfaces/disease';\n\n// const baseURL = 'localhost:8080/api/';\nconst baseURL = 'api/patients';\nconst diseaseURL = 'api/diseases';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n  patient: Patient;\n  wentBack: boolean;\n\n  constructor(private http: HttpClient) { }\n\n  getAllPatients(){\n    return this.http.get<Patient[]>(baseURL);\n  }\n\n  getAllDiseases(){\n    return this.http.get<Disease[]>(diseaseURL);\n  }\n\n  getPatient(id): Observable<Patient>{\n    return this.http.get<Patient>(`${baseURL}/${id}`);\n  }\n\n  createPatient(patient){\n    return this.http.post(baseURL, patient);\n  }\n\n  updatePatient(patient, id){\n    return this.http.put(`${baseURL}/${id}`, patient);\n  }\n\n  deletePatient(id) {\n    return this.http.delete(`${baseURL}/${id}`);\n  }\n\n  deleteAllPatients() {\n    return this.http.delete(baseURL);\n  }\n\n  findByName(name) {//todo\n    return this.http.get(`${baseURL}?name=${name}`);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}